{"ID":20204,"Author":{"Name":"Sjlver","ID":0,"FullName":"","Gravatar":"0f033478a34a9088b77910834b6c234e"},"Title":"Obtain, install, and use ASAP","Description":"\u003cdiv class=\"content\"\u003e\u003cpre\u003e\u003ccode\u003e# Welcome! This screencast shows how to obtain, install, and use ASAP\n\n# Create a project folder\nmkdir asap\ncd asap\n\n# Clone the source code\ngit clone git@github.com:dslab-epfl/asap.git\ngit clone http://llvm.org/git/clang.git asap/tools/clang\n( cd asap/tools/clang \u0026amp;\u0026amp; git checkout release_35 )\ngit clone http://llvm.org/git/compiler-rt.git asap/projects/compiler-rt\n( cd asap/projects/compiler-rt \u0026amp;\u0026amp; git checkout release_35 )\n\n# Let\u0026#39;s build ASAP\nmkdir build\ncd build\n\n# For configuring, two settings are recommended\n# - -G Ninja finishes the build sooner (you want your build ASAP, after all :) )\n# - -DLLVM_ENABLE_ASSERTIONS=ON makes bugs a bit easier to understand\ncmake -G Ninja -DLLVM_ENABLE_ASSERTIONS=ON ../asap\n\ncmake --build .\n\n# ASAP was built. Now let\u0026#39;s try things out!\n# Here, we add ASAP to the path so that we can more easily compile the benchmarks.\ncd ..\nPATH=$(pwd)/build/bin:$PATH\n\n# There is a ready-to-use script to test ASAP with bzip2. It does the following:\n# - Download bzip2 from the official website\n# - Compile it without instrumentation (the baseline version)\n# - Compile it with AddressSanitizer instrumentation.\n# - Profile it. Bzip2 comes with a few tiny test files. Running these tests is good enough for ASAP.\n# - Compile optimized versions with cost levels from 1% to 100%\nmkdir bzip2\ncd bzip2\n../asap/lib/Transforms/SanityChecks/scripts/bzip2/build_bzip2.sh\n\n# Let\u0026#39;s inspect the result\nls -l\n\n# We test the speed by measuring the time it takes to compress the ASAP source code\ntar cf test-archive.tar ../asap/*\ntime ./bzip2-baseline-build/bzip2 --keep --force test-archive.tar\ntime ./bzip2-asan-c1000-build/bzip2 --keep --force test-archive.tar\n\n# The baseline version took 31 seconds, whereas the AddressSanitizer-instrumented version takes 57 seconds.\n# An overhead of 84%\n\n# Let\u0026#39;s see how ASAP reduces this overhead\ntime ./bzip2-asan-c0010-build/bzip2 --keep --force test-archive.tar\n\n# ASAP has reduced the overhead to 6% (while keeping 78% of the instrumentation)\n# That\u0026#39;s it. Have a lot of fun!\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","Time":"2015-05-18T06:16:25Z","Tags":["OS X","zsh","xterm-256color"]}